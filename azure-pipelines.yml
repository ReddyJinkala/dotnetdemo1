# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- develop
- feature/*
- master

pool:
  name: Demo

variables:
  buildConfiguration: 'Release'
  dotNetFramework: 'net6.0'
  targetRuntime: 'linux-x64'
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  isDev: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]

stages:
- stage: 'Build'
  jobs:
  - job: 'Build'
    steps:
    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'dotnet build $(buildConfiguration)'

    # - script: dotnet publish --no-build -v detailed -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)
    #   displayName: Publish Project 

    # - task: Npm@1
    #   displayName: 'Client Tests'
    #   inputs:
    #     command: 'custom'
    #     workingDir: 'ClientApp'
    #     customCommand: run test

    - task: DotNetCoreCLI@2
      displayName: Publish Projects
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'


- stage: 'DeploytoDev'
  jobs:
  - deployment: DeployWeb
    displayName: deploy Web App
    pool:
      name: Demo
    environment: 'dev'
    strategy: 
      runOnce:
        deploy:
          steps:
           - task: AzureRmWebAppDeployment@4
             inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'AzureCon'
              appType: 'webAppLinux'
              WebAppName: 'bermtecdev'
              packageForLinux: '$(Agent.BuildDirectory)/drop/*.zip'

# - stage: 'DeploytoTest'
#   jobs:
#   - deployment: DeployWeb
#     displayName: deploy Web App
#     pool:
#       name: Demo
#     environment: 'Test'
#     strategy: 
#       runOnce:
#         deploy:
#           steps:
#            - task: AzureRmWebAppDeployment@4
#              inputs:
#               ConnectionType: 'AzureRM'
#               azureSubscription: 'AzureCon'
#               appType: 'webAppLinux'
#               WebAppName: 'bermtecdev'
#               packageForLinux: '$(Agent.BuildDirectory)/drop/*.zip'

# - stage: 'DeploytoStaging'
#   jobs:
#   - deployment: DeployWeb
#     displayName: deploy Web App
#     pool:
#       name: Demo
#     environment: 'Staging'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#            - task: AzureRmWebAppDeployment@4
#              inputs:
#               ConnectionType: 'AzureRM'
#               azureSubscription: 'AzureCon'
#               appType: 'webAppLinux'
#               WebAppName: 'bermtecdev'
#               packageForLinux: '$(Agent.BuildDirectory)/drop/*.zip'

- stage: 'DeploytoProd'
  jobs:
  - deployment: DeployWeb
    displayName: deploy Web App
    pool:
      name: Demo
    environment: 'Prod'
    strategy: 
      runOnce:
        deploy:
          steps:
           - task: AzureRmWebAppDeployment@4
             inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'AzureCon'
              appType: 'webAppLinux'
              WebAppName: 'bermtecdev'
              packageForLinux: '$(Agent.BuildDirectory)/drop'